<launch>
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

  <arg name="count" default="1"/>
 <!-- 加载机器人kobuki -->
  <group ns="robot$(arg count)">
    <include file="$(find myprofile)/launch/includes/kobuki.launch.xml">
      <arg name="ns" value="robot$(arg count)"/>
      <arg name="locx" value="$(arg count)"/>
    </include>

    <!-- 运行robot_state_publisher节点，发布tf  -->
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
	      <param name="tf_prefix" value="robot$(arg count)" />
    
    </node>
    
    <!-- Fake laser -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager_$(arg count)" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan_$(arg count)"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager_$(arg count)">
      <param name="scan_height" value="10"/>
      <param name="output_frame_id" value="/robot$(arg count)/camera_depth_frame"/>
      <param name="range_min" value="0.45"/>
      <remap from="image" to="/robot$(arg count)/camera/depth/image_raw"/>
      <remap from="scan" to="/robot$(arg count)/scan"/>
    </node>

  </group>

<!-- recursive call -->
  <include file="$(find myprofile)/launch/one_robot_recur.launch" if="$(eval arg('count') > 1)">
    <arg name="count" value="$(eval arg('count') - 1)" />
  </include>
  
</launch>
